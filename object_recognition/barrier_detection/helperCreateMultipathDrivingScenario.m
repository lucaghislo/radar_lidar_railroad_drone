function [scenario, egoCar, sensors] = helperCreateMultipathDrivingScenario
% This is a helper function and may be removed or modified in a future
% release. This helper function creates the scenario for the extended
% object tracking example with radar ghost detections. 

% Copyright 2020 The Mathworks, Inc.

% Define an empty scenario.
scenario = drivingScenario;
scenario.SampleTime = 0.1;

%% 
% Add a stretch of 500 meters of typical highway road with two lanes. The 
% road is defined using a set of points, where each point defines the center of 
% the road in 3-D space. 
roadCenters = [0 0; 50 0; 100 0; 250 20; 400 35];
r = road(scenario, roadCenters, 'lanes',lanespec(3, 'width', [4 3.6 4]));

% Add barriers alongside road to generate reflectors
barrier(scenario,r,'RoadEdgeOffset',0);
barrier(scenario,r,'RoadEdge','left','RoadEdgeOffset',0);


% Add vehicles
egoCar = vehicle(scenario, 'ClassID', 1);
trajectory(egoCar, roadCenters(2:end,:) - [0 0], 25); % On right lane

% Add a truck in front of the ego vehicle
truck = vehicle(scenario, 'ClassID', 1, 'Length', 8.1, 'Width', 2.45, 'Height',4);
trajectory(truck, [85 0;roadCenters(3:end,:)] + [0 -3.6], 20); % On center lane

% % Add a passing car that travels at 35 m/s along the road
passingCar = vehicle(scenario, 'ClassID', 1, 'Length', 4.7, 'Width', 1.8, 'Height', 1.4);
waypoints = [0 0; 50 1.8; 100 1.8; 250 21.8; 400 36.8] + [0 1.8];
trajectory(passingCar, waypoints, 35);

% % Add a car behind the ego vehicle
chaseCar = vehicle(scenario, 'ClassID', 1, 'Length', 4.7, 'Width', 1.8, 'Height', 1.4);
trajectory(chaseCar, [30 0; roadCenters(2:end,:)] - [0 0], 25); % On right lane

% A car in front of ego
followCar = vehicle(scenario, 'ClassID', 1, 'Length', 4.7, 'Width', 1.8, 'Height', 1.4);
trajectory(followCar, [75 0; roadCenters(3:end,:)] - [0 0], 25); % On right lane

%% 
% Define Radar and Vision Sensors
% In this example, you simulate an ego vehicle that has 6 radar sensors and
% 2 vision sensors covering the 360 degrees field of view. The sensors have
% some overlap and some coverage gap. The ego vehicle is equipped with a
% long-range radar sensor and a vision sensor on both the front and the
% back of the vehicle. Each side of the vehicle has two short-range radar
% sensors, each covering 90 degrees. One sensor on each side covers from
% the middle of the vehicle to the back. The other sensor on each side
% covers from the middle of the vehicle forward. The figure in the next
% section shows the coverage.

sensors = cell(4,1);

% Front-facing long-range radar sensor at the center of the front bumper of the car.
sensors{1} = radarDataGenerator('SensorIndex', 1, ...
    'UpdateRate',1/scenario.SampleTime,...
    'ScanMode','No scanning',...
    'MountingAngles', [0 0 0], ...
    'MountingLocation', [3.7 0 0.6], ...
    'RangeResolution',2.5,...
    'RangeRateResolution',1,...
    'AzimuthResolution',6,...
    'RangeRateLimits',[-100 100],...
    'ReferenceRange',100,...
    'RangeLimits', [0 80], ...
    'FieldOfView', [45, 5],...
    'HasOcclusion', true,...
    'HasRangeRate',true);

% Rear-facing long-range radar sensor at the center of the rear bumper of the car.
sensors{2} = radarDataGenerator('SensorIndex', 2, ...
    'UpdateRate',1/scenario.SampleTime,...
    'ScanMode','No scanning',...
    'MountingAngles', [180 0 0], ...
    'MountingLocation', [-1 0 0.6], ...
    'RangeResolution',2.5,...
    'RangeRateResolution',1,...
    'AzimuthResolution',6,...
    'RangeRateLimits',[-100 100],...
    'ReferenceRange',100,...
    'RangeLimits', [0 80], ...
    'FieldOfView', [45, 5],...
    'HasOcclusion', true,...
    'HasRangeRate',true);

% Rear-left-facing short-range radar sensor at the left rear wheel well of the car.
sensors{3} = radarDataGenerator('SensorIndex', 3, ...
    'ScanMode','No scanning',...
    'UpdateRate',1/scenario.SampleTime,...
    'MountingAngles', [90 0 0], ...
    'MountingLocation', [1.35 0.9 0.6], ...
    'ReferenceRange',150,...
    'RangeLimits', [0 35], ...
    'FieldOfView', [150, 5],...
    'AzimuthResolution',6,...
    'RangeResolution',1.25,...
    'RangeRateResolution',0.5,...
    'HasOcclusion', true,...
    'HasRangeRate',true);

% Rear-right-facing short-range radar sensor at the right rear wheel well of the car.
sensors{4} = radarDataGenerator('SensorIndex', 4, ...
    'ScanMode','No scanning',...
    'UpdateRate',1/scenario.SampleTime,...
    'MountingAngles', [-90 0 0], ...
    'MountingLocation', [1.35 -0.9 0.6], ...
    'ReferenceRange',150,...
    'RangeLimits', [0 35], ...
    'FieldOfView', [150, 5],...
    'AzimuthResolution',6,...
    'RangeResolution',1.25,...
    'RangeRateResolution',0.5,...
    'HasOcclusion', true,...
    'HasRangeRate',true);

% Radar sensor common attributes
for i = 1:numel(sensors)
    sensors{i}.DetectionCoordinates = 'Sensor Spherical';
    sensors{i}.HasFalseAlarms = true;
    sensors{i}.FalseAlarmRate = 1e-6;
    sensors{i}.HasNoise = true;
    sensors{i}.HasRangeRate = true;
    sensors{i}.TargetReportFormat = 'Detections';
    sensors{i}.Profiles = actorProfiles(scenario);
    sensors{i}.HasOcclusion = true;
    sensors{i}.CenterFrequency = 7.7e10;
    sensors{i}.HasGhosts = true;
    sensors{i}.HasINS = false;
end

end
